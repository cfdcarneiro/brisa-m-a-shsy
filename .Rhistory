geom_abline(yintercept = 100, slope = 0, linetype = "dashed", color = "grey")
fig_differentiationYN
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_abline(yintercept = 100, slope = 0, linetype = "dashed", color = "grey")
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_abline(intercept = 100, slope = 180, linetype = "dashed", color = "grey")
fig_differentiationYN
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 100, slope = 180, linetype = "dashed", color = "grey")
fig_differentiationYN
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, slope = 180, linetype = "dashed", color = "grey")
fig_differentiationYN
#fig_differentiation =
#  ggplot(dados_meta_ratios, aes(x = Diferentiation_method, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
#  labs(y = "Ratio of means", x = "Differentiation method") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  geom_abline(yintercept = 0, slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_differentiation-ratios.png")
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, slope = 180, linetype = "dashed", color = "grey")
fig_differentiationYN
ggsave("./Figures/fig_differentiation-ratios-sim-nao.png")
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_differentiationYN
ggsave("./Figures/fig_differentiation-ratios-sim-nao.png")
meta_difduration
fig_difduration_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Diferentiation_duration_days), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Duration of differentiation (days)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
ggsave("./Figures/fig_difduration-ratios-percent-scale.png")
fig_differentiationYN
fig_difduration_
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1, fill = "grey") +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_differentiationYN
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, position =  position_jitterdodge(dodge.width = 0), stroke = 1, fill = "grey") +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_differentiationYN
#fig_differentiation =
#  ggplot(dados_meta_ratios, aes(x = Diferentiation_method, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
#  labs(y = "Ratio of means", x = "Differentiation method") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  geom_abline(yintercept = 0, slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_differentiation-ratios.png")
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, position =  position_jitterdodge(dodge.width = 0), stroke = 1, fill = "grey") +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_differentiationYN
ggsave("./Figures/fig_differentiation-ratios-sim-nao.png")
#fig_difduration =
#  ggplot(dados_meta_ratios, aes(x = as.numeric(Diferentiation_duration_days), y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Duration of differentiation (days)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(n.breaks = 7) +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_difduration-ratios.png")
fig_difduration_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Diferentiation_duration_days), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Duration of differentiation (days)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_difduration_
ggsave("./Figures/fig_difduration-ratios-percent-scale.png")
ggsave("./Figures/fig_differentiation-ratios-sim-nao.png", height = 10, width = 10, units = "cm")
#fig_differentiation =
#  ggplot(dados_meta_ratios, aes(x = Diferentiation_method, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
#  labs(y = "Ratio of means", x = "Differentiation method") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  geom_abline(yintercept = 0, slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_differentiation-ratios.png")
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, position =  position_jitterdodge(dodge.width = 0), stroke = 1, fill = "grey") +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_differentiationYN
ggsave("./Figures/fig_differentiation-ratios-sim-nao.png", height = 10, width = 10, units = "cm")
fig_differentiationYN =
ggplot(dados_meta_ratios, aes(x = Diferentiation_method_YN, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, position =  position_jitterdodge(dodge.width = 0), stroke = 0.5, fill = "grey") +
labs(y = "Cell viability (% of control)", x = "Differentiated cells") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_differentiationYN
ggsave("./Figures/fig_differentiation-ratios-sim-nao.png", height = 10, width = 10, units = "cm")
#fig_difduration =
#  ggplot(dados_meta_ratios, aes(x = as.numeric(Diferentiation_duration_days), y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Duration of differentiation (days)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(n.breaks = 7) +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_difduration-ratios.png")
fig_difduration_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Diferentiation_duration_days), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Duration of differentiation (days)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_difduration_
ggsave("./Figures/fig_difduration-ratios-percent-scale.png", height = 10, width = 10, units = "cm")
meta_aggregation
#fig_agregation =
#  ggplot(dados_meta_ratios, aes(x = Abeta_aggregation, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
#  labs(y = "Ratio of means", x = "Abeta aggregation") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_discrete(limits = c("Monomers", "Oligomers", "Fibers", "Unclear"))
#  geom_abline(yintercept = 0, slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_agregation-ratios.png")
fig_agregation_ =
ggplot(dados_meta_ratios, aes(x = Abeta_aggregation, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", position =  position_jitterdodge(dodge.width = 0), stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Abeta aggregation") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_discrete(limits = c("Monomers", "Oligomers", "Fibers", "Unclear"))
geom_hline(yintercept = 0, linetype = "dashed", color = "grey")
fig_agregation_
ggsave("./Figures/fig_agregation-ratios-percent-scale.png", height = 10, width = 10, units = "cm")
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_agregation_ =
ggplot(dados_meta_ratios, aes(x = Abeta_aggregation, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", position =  position_jitterdodge(dodge.width = 0), stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Abeta aggregation") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_discrete(limits = c("Monomers", "Oligomers", "Fibers", "Unclear")) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_agregation_
ggsave("./Figures/fig_agregation-ratios-percent-scale.png", height = 10, width = 10, units = "cm")
meta_concent
fig_concent_ =
ggplot(dados_meta_ratios_max100, aes(x = Concentration_uM, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Abeta concentration (uM)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_concent_
#fig_concent_c =
#  ggplot(dados_meta_ratios_max100, aes(x = Concentration_uM, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Abeta concentration (uM)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(n.breaks = 7) +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#fig_concent_f =
#  ggplot(dados_meta_ratios_max100 %>% filter(Concentration_uM<10), aes(x = Concentration_uM, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "none") +
#  scale_y_continuous(n.breaks = 7, name = element_blank()) +
#  scale_x_continuous(n.breaks = 7, name = element_blank()) +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#fig_concent =
#  fig_concent_c + annotation_custom(ggplotGrob(fig_concent_f), xmin = 40, xmax = 80,
#                       ymin = -850, ymax = -300)
#ggsave("./Figures/fig_concent-ratios.png")
fig_concent_ =
ggplot(dados_meta_ratios_max100, aes(x = Concentration_uM, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Abeta concentration (uM)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_concent_
ggsave("./Figures/fig_concent-ratios-percent-scale.png", height = 10, width = 10, units = "cm")
#fig_concent_c =
#  ggplot(dados_meta_ratios_max100, aes(x = Concentration_uM, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Abeta concentration (uM)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(n.breaks = 7) +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#fig_concent_f =
#  ggplot(dados_meta_ratios_max100 %>% filter(Concentration_uM<10), aes(x = Concentration_uM, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "none") +
#  scale_y_continuous(n.breaks = 7, name = element_blank()) +
#  scale_x_continuous(n.breaks = 7, name = element_blank()) +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#fig_concent =
#  fig_concent_c + annotation_custom(ggplotGrob(fig_concent_f), xmin = 40, xmax = 80,
#                       ymin = -850, ymax = -300)
#ggsave("./Figures/fig_concent-ratios.png")
fig_concent_ =
ggplot(dados_meta_ratios_max100, aes(x = Concentration_uM, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Abeta concentration (uM)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_concent_
ggsave("./Figures/fig_concent-ratios-percent-scale.png", height = 10, width = 10, units = "cm")
fig_duration_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Duration_days), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Abeta duration of exposure (days)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_duration_
#fig_duration =
#  ggplot(dados_meta_ratios, aes(x = as.numeric(Duration_days), y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Abeta duration of exposure (days)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(n.breaks = 7) +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_duration-ratios.png")
fig_duration_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Duration_days), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Abeta duration of exposure (days)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(n.breaks = 7) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_duration_
ggsave("./Figures/fig_duration-ratios-percent-scale.png", height = 10, width = 10, units = "cm")
meta_assay
fig_assay_ =
ggplot(dados_meta_ratios, aes(x = Assay, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", position =  position_jitterdodge(dodge.width = 0), stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Assay") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_discrete(limits = c("MTT", "WST", "CCK-8", "MTS", "XTT", "Rezasurin", "EZ4U")) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_assay_
#fig_assay =
#  ggplot(dados_meta_ratios, aes(x = Assay, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
#  labs(y = "Ratio of means", x = "Assay") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_discrete(limits = c("MTT", "WST", "CCK-8", "MTS", "XTT", "Rezasurin", "EZ4U")) +
#  geom_abline(yintercept = 0, slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_assay-ratios.png")
fig_assay_ =
ggplot(dados_meta_ratios, aes(x = Assay, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", position =  position_jitterdodge(dodge.width = 0), stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Assay") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_discrete(limits = c("MTT", "WST", "CCK-8", "MTS", "XTT", "Rezasurin", "EZ4U")) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_assay_
ggsave("./Figures/fig_assay-ratios-percent-change.png", height = 10, width = 10, units = "cm")
meta_assay
#fig_assay =
#  ggplot(dados_meta_ratios, aes(x = Assay, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
#  labs(y = "Ratio of means", x = "Assay") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_discrete(limits = c("MTT", "WST", "CCK-8", "MTS", "XTT", "Rezasurin", "EZ4U")) +
#  geom_abline(yintercept = 0, slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_assay-ratios.png")
fig_assay_ =
ggplot(dados_meta_ratios, aes(x = Assay, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", position =  position_jitterdodge(dodge.width = 0), stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Assay") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_discrete(limits = c("MTT", "WST", "CCK-8", "MTS", "XTT", "Resazurin", "EZ4U")) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_assay_
ggsave("./Figures/fig_assay-ratios-percent-change.png", height = 10, width = 10, units = "cm")
#fig_assay =
#  ggplot(dados_meta_ratios, aes(x = Assay, y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, position =  position_jitterdodge(dodge.width = 0), stroke = 1) +
#  labs(y = "Ratio of means", x = "Assay") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_discrete(limits = c("MTT", "WST", "CCK-8", "MTS", "XTT", "Rezasurin", "EZ4U")) +
#  geom_abline(yintercept = 0, slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_assay-ratios.png")
fig_assay_ =
ggplot(dados_meta_ratios, aes(x = Assay, y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", position =  position_jitterdodge(dodge.width = 0), stroke = 0.5) +
labs(y = "Cell viability (% of control)", x = "Assay") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_discrete(limits = c("MTT", "WST", "CCK-8", "MTS", "XTT", "Resazurin", "EZ4U")) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_assay_
ggsave("./Figures/fig_assay-ratios-percent-change.png", height = 10, width = 10, units = "cm")
meta_density
#fig_density =
#  ggplot(dados_meta_ratios, aes(x = as.numeric(Cell_density), y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Cell density (log10 scale)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(trans = "log10") +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_density-ratios.png")
fig_density_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Cell_density), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Cell density (log10 scale)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(trans = "log10") +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_density_
ggsave("./Figures/fig_density-ratios-percent-change.png")
#fig_density =
#  ggplot(dados_meta_ratios, aes(x = as.numeric(Cell_density), y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Cell density (log10 scale)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(trans = "log10") +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_density-ratios.png")
fig_density_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Cell_density), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Cell density (log10 scale)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(trans = "log10") +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_density_
ggsave("./Figures/fig_density-ratios-percent-change.png")
#fig_density =
#  ggplot(dados_meta_ratios, aes(x = as.numeric(Cell_density), y=yi, size = 1/sqrt(vi))) +
#  geom_point(shape = 1, stroke = 1) +
#  labs(y = "Ratio of means", x = "Cell density (log10 scale)") +
#  theme_classic() +
#  scale_size_continuous(guide = "none") +
#  theme(legend.position = "bottom") +
#  scale_y_continuous(n.breaks = 7) +
#  scale_x_continuous(trans = "log10") +
#  geom_abline(slope = 0, linetype = "dashed", color = "grey")
#ggsave("./Figures/fig_density-ratios.png")
fig_density_ =
ggplot(dados_meta_ratios, aes(x = as.numeric(Cell_density), y=exp(yi), size = 1/sqrt(vi))) +
geom_point(shape = 21, fill = "grey", stroke = 1) +
labs(y = "Cell viability (% of control)", x = "Cell density (log10 scale)") +
theme_classic() +
scale_size_continuous(guide = "none") +
theme(legend.position = "bottom") +
scale_y_continuous(n.breaks = 7) +
scale_x_continuous(trans = "log10") +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey")
fig_density_
ggsave("./Figures/fig_density-ratios-percent-change.png", height = 10, width = 10, units = "cm")
